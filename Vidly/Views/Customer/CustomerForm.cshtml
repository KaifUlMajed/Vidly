@model Vidly.ViewModels.CustomerFormViewModel
@{
    var type = "Add";
    try
    {
        if (Model.Customer.ID != 0)
        {
            type = "Edit";
        }
    }
    catch (NullReferenceException e) { }

    ViewBag.Title = $"{type} Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@type Customer</h2>

@Html.ValidationSummary(true, "Please fill in the form correctly.")
@using (Html.BeginForm("Save", "Customer"))
{
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Name)
        @Html.TextBoxFor(c => c.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(c => c.Customer.MembershipTypeID)
        @Html.DropDownListFor(c => c.Customer.MembershipTypeID, new SelectList(Model.MembershipTypes, "ID", "Name"), "Select Membership Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.MembershipTypeID)
    </div>

    <div class="form-group">
        @Html.LabelFor(c => c.Customer.BirthDate)
        @Html.TextBoxFor(c => c.Customer.BirthDate, "{0: dd MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.BirthDate)
    </div>

    <div class="form-group form-check">
        @Html.CheckBoxFor(c => c.Customer.IsSubscribed, new { @class = "form-check-input" })
        @Html.LabelFor(c => c.Customer.IsSubscribed, new { @class = "form-check-label" })
        @Html.ValidationMessageFor(c => c.Customer.IsSubscribed)
    </div>

    @Html.HiddenFor(c => c.Customer.ID)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">@type</button>

}

@section scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
    }



